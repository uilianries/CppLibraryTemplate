language: cpp

sudo: true

notifications:
  email:
    on_success: never
    on_failure: always

env:
  # For everyone in the matrix
  global:
    # Conan package
    # We need to set CONAN_PASSWORD in the Repository Settings
    # Note that it has to be the API key, not the profile password
    - CONAN_PACKAGE_NAME="SampleProject"
    - CONAN_USERNAME="LPeter1997"
    - CONAN_LOGIN_USERNAME="uilianries"
    - CONAN_CHANNEL="dev"
    - CONAN_UPLOAD="https://api.bintray.com/conan/uilianries/conan"
    - CONAN_HEADER_ONLY="True"
    - CONAN_STABLE_BRANCH_PATTERN="release/\d+\.\d+\.\d+.*"
    - CONAN_UPLOAD_ONLY_WHEN_STABLE="False"
    - CONAN_CONANFILE="conan/conanfile.py"
    - CONAN_TEST_FOLDER="test_package"
    # Build related
    - CXXFLAGS="-Wall -Wextra -Werror"

matrix:
  include:
  # Linux, GCC8
  - os: linux
    dist: xenial
    compiler: gcc
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test', 'deadsnakes']
        packages: ['g++-8', 'python3.6']
    env: COMPILER=g++-8
    before_script:
      - pip install --user conan
  # Linux, Clang8
  - os: linux
    dist: xenial
    compiler: clang
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test', 'llvm-toolchain-xenial-8', 'deadsnakes']
        packages: ['g++-8', 'clang-8', 'python3.6']
    env:
      - COMPILER=clang++-8
      - CXXFLAGS="${CXXFLAGS} -stdlib=libstdc++"
    before_script:
      - pip install --user conan
  # TODO: Fix, need Python3.6
  # OSX, Clang
  #- os: osx
  #  osx_image: xcode10
  #  compiler: clang
  #  env: COMPILER=clang++
  #  before_script:
  #    - pip install --user conan
  # Linux, GCC8, coverage
  - os: linux
    dist: xenial
    compiler: gcc
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test', 'deadsnakes']
        packages: ['g++-8', 'python3.6']
    env:
      - COMPILER=g++-8
      # CMake automatically imports this as C++ flags
      - CXXFLAGS="-O0 --coverage -fno-inline -fno-inline-small-functions -fno-default-inline"
    before_script:
      - pip install --user conan
      - pip install --user cpp-coveralls
    after_success:
      - coveralls --gcov gcov-8 --gcov-options '\-lp' --root ${TRAVIS_BUILD_DIR} --build-root ${TRAVIS_BUILD_DIR}/build --extension cpp --extension hpp --exclude deps --exclude tests --exclude examples --include single_include
  # Linux, Conan release
  - os: linux
    dist: xenial
    sudo: required
    language: python
    python: "3.6"
    services:
      - docker
    env:
      - CONAN_GCC_VERSIONS=8
      - CONAN_DOCKER_IMAGE=conanio/gcc8
    install:
      - pip install -U conan_package_tools conan
    script:
      - conan user
      - python "conan/build.py"

install:
  - python --version
  - cmake --version
  - export CXX=${COMPILER}
  - echo ${CXX}
  - ${CXX} --version
  - ${CXX} -v

script:
  - mkdir -p build && cd build
  # Generate and build
  # TODO: Why CMAKE_BUILD_TYPE=Release kill the debug flags?
  - cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_FLAGS="${CXXFLAGS}" ..
  - make -j 4
  # Run tests
  - CTEST_OUTPUT_ON_FAILURE=1
  - ctest -j 4
